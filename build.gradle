/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'idea'
}

repositories {
    jcenter()

    maven { url 'https://oss.sonatype.org/service/local/repositories/comhasanozgan-1028/content' }
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}


dependencies {
    def kotlinVersion = '1.3.41'
    def ktorVersion = '1.2.5'
    def logbackVersion = "1.2.3"
    def komandanteVersion = "0.0.2.63"
    def arrowVersion = "0.9.0"
    def exposedVersion = "0.16.1"
    def rxjavaVersion = "2.2.0"
    def rxKotlinVersion = "2.2.0"

    // Align versions of all Kotlin components
    implementation platform('org.jetbrains.kotlin:kotlin-bom')

    // Use the Kotlin JDK 8 standard library.
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Use the Kotlin test library.
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    implementation "ch.qos.logback:logback-classic:$logbackVersion"

    // Ktor
    implementation "io.ktor:ktor-websockets:$ktorVersion"
    implementation "io.ktor:ktor-server-netty:$ktorVersion"
    implementation "io.ktor:ktor-websockets:$ktorVersion"
    implementation "io.ktor:ktor-gson:$ktorVersion"

    // komandante
    implementation "com.hasanozgan:komandante:$komandanteVersion"

    // Arrow
    implementation "io.arrow-kt:arrow-core-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-extensions:$arrowVersion"

    // RXJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxKotlinVersion"


    // Exposed DB library
    implementation "org.jetbrains.exposed:exposed:$exposedVersion"

    // Use the Kotlin JUnit integration.
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    
    // Ktor test
    testImplementation "io.ktor:ktor-server-test-host:$ktorVersion"
}

//sourceSets {
//    main.kotlin.srcDirs = [ 'src' ]
//    main.resources.srcDirs = [ 'resources' ]
//}

application {

    // Define the main class for the application
    mainClassName = 'com.hasanozgan.komandante.todomvc.AppKt'
}
